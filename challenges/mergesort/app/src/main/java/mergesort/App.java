/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package mergesort;

import java.util.Arrays;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());
        int[] array = {8,4,23,42,16,15};
        System.out.println(Arrays.toString(mergeSort(array)));
    }
    public static int[] mergeSort(int[] array){
        int n =array.length;
        int mid = n / 2;
        int[] left = new int[mid];
        int[] right = new int[n - mid];
        if (n > 1) {
            for (int i = 0; i < left.length; i++) {
                left[i] = array[i];

            }
            for (int j = 0; j < right.length; j++) {
                right[j] = array[j + mid];
            }
            mergeSort(left);
            mergeSort(right);
            merge(left, right, array);

        }
        return array;
    }
    public static int[] merge(int[] left, int[] right, int[] array){
        int i =0;
        int j =0;
        int k =0;
        while (i<left.length && j< right.length){
            if (left[i] <= right[j]){
                array[k] = left[i];
                i=i+1;
            }
            else {
                array[k] = right[j];
                j=j+1;
            }
            k=k+1;
        }

        if (i == left.length){
            while (j < right.length){
            array[k] = left[i];
                i=i+1;
                k=k+1;

            }
        }  else {
        while (j<right.length){
            array[k]=right[j];
            j=j+1;
            k=k+1;
        }


    }

        return array;
    }

}
