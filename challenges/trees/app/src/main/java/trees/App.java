/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package trees;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());
        BinaryTree<Integer> newTree = new BinaryTree<>();
        Node<Integer> node5 = new Node<>(6);
        newTree.root.right = node5;
        System.out.println(newTree.maximumValue());

       



        BinarySearchTree binarySearchTree = new BinarySearchTree();
        Node<Integer> searchNodeOne = new Node<>(15);
        Node<Integer> searchNodeThree = new Node<>(10);

        binarySearchTree.add(27);
        binarySearchTree.add(26);

        binarySearchTree.contains(7);
        System.out.println (binarySearchTree.contains(14));


    }

    public static ArrayList<Integer> firstBreadth(BinaryTree<Integer> tree) {
        ArrayList<Integer> values =new ArrayList<Integer>();
        Queue<Node> list = new LinkedList<>();

            while (!list.isEmpty()) {
                Node node = list.remove();
                values.add((Integer)node.value);
                if (node.right != null) {
                    list.add(node.right);
                }
                if (node.left != null) {
                    list.add(node.left);
                }
            }
        if (tree.root != null) {
            list.add(tree.root);
        }
        return values;
    }


}
